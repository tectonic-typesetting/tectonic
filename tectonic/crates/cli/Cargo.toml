[badges]
travis-ci = { repository = "tectonic-typesetting/tectonic" }
codecov = { repository = "tectonic-typesetting/tectonic", service = "github" }


[package]
name = "tectonic"
version = "0.0.0-dev.0" # assigned with cranko (see README)
authors = ["Peter Williams <peter@newton.cx>"]
description = """
A modernized, complete, embeddable TeX/LaTeX engine. Tectonic is forked from the XeTeX
extension to the classic "Web2C" implementation of TeX and uses the TeXLive distribution
of support files.
"""
homepage = "https://tectonic-typesetting.github.io/"
documentation = "https://docs.rs/tectonic"
repository = "https://github.com/tectonic-typesetting/tectonic/"
readme = "CARGO_README.md"
keywords = ["tex", "latex", "typesetting", "font"]
categories = [
    "command-line-interface",
    "parser-implementations",
    "rendering",
    "science",
    "text-processing",
]
license = "MIT"
edition = "2018"
exclude = ["/dist/", "/reference_sources/"]

[lib]
name = "tectonic"
crate-type = ["rlib"]

[lints.rust]
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(backtrace)'] }

[dependencies]
tectonic_bridge_core = { workspace = true }
tectonic_bundles = { workspace = true }
tectonic_docmodel = { workspace = true, optional = true }
tectonic_engine_bibtex = { workspace = true }
tectonic_engine_spx2html = { workspace = true }
tectonic_engine_xdvipdfmx = { workspace = true }
tectonic_engine_xetex = { workspace = true }
tectonic_errors = { workspace = true }
tectonic_geturl = { workspace = true }
tectonic_io_base = { workspace = true }
tectonic_status_base = { workspace = true }
tectonic_xdv = { workspace = true }
tectonic_xetex_layout = { workspace = true }

byte-unit = { workspace = true }
cfg-if = { workspace = true }
error-chain = { workspace = true }
flate2 = { workspace = true }
fs2 = { workspace = true }
lazy_static = { workspace = true }
libc = { workspace = true }
md-5 = { workspace = true }
open = { workspace = true }
quick-xml = { workspace = true }
serde = { workspace = true, optional = true }
sha2 = { workspace = true }
clap = { workspace = true }
tempfile = { workspace = true }
termcolor = { workspace = true }
tokio = { workspace = true }
toml = { workspace = true, optional = true }
url = { workspace = true }
watchexec = { workspace = true }
watchexec-filterer-globset = { workspace = true }
watchexec-signals = { workspace = true }
watchexec-supervisor = { workspace = true }
zip = { workspace = true }
time = { workspace = true }
clap_complete = { workspace = true }
walkdir = { workspace = true }
regex = { workspace = true }
anyhow = { workspace = true }
tar = { workspace = true }
tracing = { workspace = true }
tracing-subscriber = { workspace = true }

[dev-dependencies]
filetime = { workspace = true }
futures = { workspace = true }
headers = { workspace = true }
http-body-util = { workspace = true }
hyper = { workspace = true }
hyper-util = { workspace = true }
tempfile = { workspace = true }

[package.metadata.vcpkg]
git = "https://github.com/microsoft/vcpkg"
rev = "4a600e9fea71bd7872080cbb716797e04d30e6d3"
overlay-triplets-path = "dist/vcpkg-triplets"

# If other targets start using custom triplets like x86_64-pc-windows-msvc,
# add them to crates/dep_support/src/lib.rs:new_from_vcpkg() to give users
# guidance if they might need to set $VCPKGRS_TRIPLET.
[package.metadata.vcpkg.target]
x86_64-apple-darwin = { install = ["freetype", "harfbuzz[graphite2]", "icu"] }
aarch64-apple-darwin = { triplet = "arm64-osx", install = [
    "freetype",
    "harfbuzz[graphite2]",
    "icu",
] }
x86_64-unknown-linux-gnu = { install = [
    "fontconfig",
    "freetype",
    "harfbuzz[graphite2]",
    "icu",
] }
x86_64-pc-windows-msvc = { triplet = "x64-windows-static-release", install = [
    "fontconfig",
    "freetype",
    "harfbuzz[graphite2]",
    "icu",
] }

[package.metadata.internal_dep_versions]
tectonic_bridge_core = "thiscommit:2023-06-11:PvhF7YB"
tectonic_bridge_flate = "thiscommit:2021-01-01:eer4ahL4"
tectonic_bridge_graphite2 = "2c1ffcd702a662c003bd3d7d0ca4d169784cb6ad"
tectonic_bridge_harfbuzz = "thiscommit:2023-09-17:FZwRtUP"
tectonic_bridge_icu = "thiscommit:2023-09-17:AwTXf3W"
tectonic_bundles = "thiscommit:2022-03-29:SFnXSaL"
tectonic_cfg_support = "thiscommit:aeRoo7oa"
tectonic_dep_support = "5faf4205bdd3d31101b749fc32857dd746f9e5bc"
tectonic_docmodel = "a88a0418a9c3c559d023d9b1da9b03fce3a469e5"
tectonic_engine_bibtex = "thiscommit:2021-01-17:KuhaeG1e"
tectonic_engine_spx2html = "thiscommit:2022-11-22:vicemXu"
tectonic_engine_xdvipdfmx = "8a003834b1f6d967d33cc07de4cc025af14560da"
tectonic_engine_xetex = "c135e6a4a5a2e8c2dc4edcbcfd93f7d466ff8f88"
tectonic_errors = "317ae79ceaa2593fb56090e37bf1f5cc24213dd9"
tectonic_geturl = "68c5fc525c5fead75913bd90380043761bde9f61"
tectonic_io_base = "thiscommit:2021-06-13:XFjtSsZ"
tectonic_status_base = "317ae79ceaa2593fb56090e37bf1f5cc24213dd9"
tectonic_xdv = "c91f2ef37858d1a0a724a5c3ddc2f7ea46373c77"
tectonic_xetex_layout = "2c1ffcd702a662c003bd3d7d0ca4d169784cb6ad"


[features]
default = ["geturl-reqwest", "serialization"]

# The main motivation for this feature was to be able to compile without
# proc-macros (via serde-derive), for statically-linked targets which can't use
# them. In the CI, we now build for statically-linked targets using a
# cross-compilation model that allows us to have proc-macros anyway. So maybe
# this feature should go away? It's kind of annoying to support, and at this
# point proc-macros may have snuck into the dependency tree elsewhere, anyway.
serialization = ["serde", "tectonic_docmodel", "toml"]

external-harfbuzz = ["tectonic_engine_xetex/external-harfbuzz"]

geturl-curl = ["tectonic_bundles/geturl-curl", "tectonic_geturl/curl"]
geturl-reqwest = ["tectonic_bundles/geturl-reqwest", "tectonic_geturl/reqwest"]

native-tls-vendored = [
    "tectonic_bundles/native-tls-vendored",
    "tectonic_geturl/native-tls-vendored",
]

# developer feature to compile with the necessary flags for profiling tectonic.
profile = []
