# Copyright 2018-2019 the Tectonic Project
# Licensed under the MIT License

# HACKS FOR INVESTIGATION - DO NOT MERGE

# This CI workflow builds and tests Tectonic on a synthetic PowerPC CPU to
# verify that we work on big-endian systems. It's not included in the Travis
# suite because the workflow is so different from our standard one, and Circle
# has a longer build time limit, which is important in this laughably
# inefficient approach that we're taking.
#
# Here we leverage the continuous deployment framework that's driven by our
# Travis CI configuration. When commits are merged to master, a tag called
# `continuous` is deleted and recreated to point to the latest version. This
# allows us to write tag-driven CD logic that closely parallels the release
# deployment logic that fires when a tag named `vX.Y.Z` is pushed to GitHub.
# Since Travis CI takes care of the tag creation, we actually ignore pushes to
# master, and instead just watch for events on the `continuous` tag.
#
# Environment variables used by Circle:
# https://circleci.com/docs/2.0/env-vars/#built-in-environment-variables

version: 2.1

executors:
  bigendian-host:
    machine:
      image: circleci/classic:201711-01

jobs:
  build:
    executor: bigendian-host
    steps:
      # Print a notice aimed at confused pull-requesters:
      - run: echo "Testing Tectonic on a synthetic big-endian CPU; this will take a while."
      - run: echo "Sometimes the build stalls and times out; this is likely not your fault."
      - checkout
      - run: myfoo=bar
      - run: echo x${myfoo}x
      - run:
          command: sudo bash .circleci/outer-build.sh $CIRCLE_WORKING_DIRECTORY
          no_output_timeout: 1800
      - run: pwd
      - run: ls $CIRCLE_WORKING_DIRECTORY

  # In principle it would be cleaner to do the deploy in a different job,
  # orchestrated by the workflows setup, but it is somewhat annoying for
  # jobs to share data (https://circleci.com/docs/2.0/workflows/#using-workspaces-to-share-data-among-jobs).
  # For now, let's just take the easy way out:
  build-and-deploy:
    executor: bigendian-host
    steps:
      - checkout
      - run: 'false'

workflows:
  version: 2
  pull-request-build:
    jobs:
      - build:
          filters:
            branches:
              only: /pull\/[0-9]+/
  continuous-deployment-build:
    jobs:
      - build-and-deploy:
          filters:
            tags:
              only: continuous
            branches:
              ignore: /.*/
  release-build:
    jobs:
      - build-and-deploy:
          filters:
            tags:
              only: /^v[0-9]\..*/
            branches:
              ignore: /.*/
